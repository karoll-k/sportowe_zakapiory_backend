// turn on the server
php artisan serve

//check the routes list
php artisan route:list

//make controller
php artisan make:controller controller
php artisan make:controller --resource controller (better)

// migration commands
php artisan migrate
php artisan migrate:rollback
php artisan migrate:reset

// database raw sql quieres (  Route::get('/test/, function() { //here// }); )
DB::insert('insert into posts(a,b) values(?,?)', ['a', 'b']);
$result = DB::select('select * from table where id = ?', [number]);
$updated = DB::update('update table set record = "updated record" where id = ?', [number]);
$deleted = DB::delete('delete from table where id = ?, [number]);

//models
php artisan make:model name
php artisan make:model name -m (with migration)
laravel always thinks the table is named like name + s. for example names. if you created a bad model name you can fix it with "protected $table = 'names';"
                                                                           your id column should always be named "id" but it doesnt "protected $primaryKey = 'other_id_name';
// find/select
use App\Name;
foreach(Name::all() as $n) {             
    echo $n->title . "   ///////////  " . $n->body . "<br>";
}
$name = Name::find(id);
return $name->title;                                                         
// where
$name = Name::where('id', $id)->get();
//insert
Route::get('eloquent/insert', function(){
    $name = new name;
    $name->thing = "new orm thing";
    $name->save();
});
//update // new record                       // in controller -> protected $fillable = [ 'title', 'content' ];
Route::get('eloquent/create', function(){
    Post::create(['title'=>"test", 'body'=>"test2"]);
});
//update data
Route::get('eloquent/update', function(){
    Post::where('id',2)->where('is_admin',0)->update(['title'=>'new title','body'=>'new body content'])
});
//delete data
Route::get('eloquent/delete', function(){
    $post = Post::find(1);
    $post -> delete();
});
Route::get('eloquent/delete2', function(){
    Post::destroy(2); //number is id //multiple -> Post::destroy([2,3]);
});